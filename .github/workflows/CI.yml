name: CI

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: 🛎️ Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # All history for branches and tags

      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 🛠️ Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: '${{ matrix.node-version }}'
          cache: pnpm

      - name: 📂 Install Dependencies
        run: pnpm i

      - name: 🧐 Check Code Quality
        run: pnpm lint

      # - name: 🎭 Install Playwright
      #   run: pnpm i playwright http-server wait-on; npx playwright install --with-deps

      # - name: 📔 Build Storybook
      #   run: pnpm build-storybook --quiet

      # - name: 🧪 Serve Storybook and run tests
      #   run: |
      #     pnpx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
      #       "pnpm exec http-server storybook-static --port 6006 --silent" \
      #       "pnpm exec wait-on tcp:6006 && pnpm test-storybook"

      # - name: 🔬 Run Unit Tests
      #   run: pnpm jest ...

      # - name: 🔍 Run Integration Tests
      #   run: pnpm jest ...

      # - name: ⌚ 💀 Run E2E Tests
      #   run: pnpx playwright test

      # - name: 👀 Run Visual Tests
      #   env:
      #     CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
      #   run: pnpm run chromatic

      - name: 🏗️ Build Project
        # env:
        #   SANITY_API_READ_TOKEN: ${{ secrets.SANITY_API_READ_TOKEN }}
        run: pnpm build:all

      - name: 🤖 Run Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: pnpm exec semantic-release

      - name: 💰 Profit
        run: echo 🐞
